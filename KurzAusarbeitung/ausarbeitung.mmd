Base Header Level:  3

# Thematic overview

As modern embedded applications evolve, their performance requirements increase. Due to the limitations of embedded platforms, such as constraints in power consumption and heat dissipation, these increased performance requirements cannot be met by increasing processor clock rates. Consequently, modern embedded processors, such as the Dual Core Cortex-A9 shipped on the Xilinx Zynq platform, do not only feature more than a single processing core, but also provide support for hardware level parallelism, for example by using "Single Instruction - Multiple Data" (SIMD) techniques which are especially well suited for media and signal processing <!--\citep{Kejariwal2009}-->. Since it is not possible to automatically parallelize existing applications, they need to be redesigned to take advantage of the platform enhancements.

The process of (re-)designing an application for parallelism involves finding *exploitable concurrency*, by analyzing the problem at hand, decomposing it into subproblems that can **safely execute at the same time**, based on which a parallel algorithm can be designed and implemented <!--\citep{Mattson2010}-->.

<!--\todo{expand on parallel algorithms}-->

The Go programming language was conceived, among other things, to allow for a more productive development environment for highly concurrent applications. While it is possible to write concurrent applications in many of the programming languages widely in use today, very few of them were specifically built around the concept of concurrency. <!--\citep{Pike2012}--> The hypothesis is thus, that by using the Go programming language to develop parallel applications on embedded platforms, one can increase developer productiveness by allowing the language to take care of tasks such as thread scheduling and memory management. Given that said features come at the cost of performance, another hypothesis that requires confirmation is that the overhead that the usage of Go introduces on an embedded platform is insignificant compared to the benefit that its usage provides.

<!--\todo{Konsequenzen fÃ¼r AW1/AW2/PJ? Ziel angeben!}-->

<!--
\clearpage
\fig{width=\textwidth}{ZynqPlatformAnwendung}

\bibliography{bibliography/bibliography}
-->
